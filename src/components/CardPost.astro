---
export const prerender = false;
import { urlForImage } from "../sanity/lib/urlForImage";
import { loadQuery } from "./../sanity/lib/load-query";
import PortableTextImage from "./PortableTextImage.astro";

const { data: posts } = await loadQuery({
  query: `*[_type == "post" && defined(slug.current)]{title, "mainImage": mainImage.asset->url,
  "imageWidth": mainImage.asset->metadata.dimensions.width,
  "imageHeight": mainImage.asset->metadata.dimensions.height, 'alt' : mainImage.alt} | order(publishedAt desc)`,
  params: {},
});
---

{
  posts.map((post) => (
    <li class="hover:underline relative mx-auto max-w-[500px] mb-2 group hover:z-10 rounded-lg break-inside-avoid">
      <div class="relative">
        <a
          href={urlForImage(post.mainImage)
            .width(1920)
            .height(Math.round((1920 * post.imageHeight) / post.imageWidth))
            .format("webp")
            .url()}
          data-pswp-width={1920}
          data-pswp-height={Math.round((1920 * post.imageHeight) / post.imageWidth)}
        >
          <PortableTextImage
            classImg="max-w-full object-center rounded-lg transform group-hover:scale-105 group-hover:shadow-[rgba(0,_0,_0,_0.10)_0px_0px_60px_-10px] group-hover:shadow-fuchsia-500 transition-all duration-300"
            asset={post.mainImage}
            alt={post.alt || "Imagen sin texto Alternativo"}
            imageHeight={post.imageHeight}
            imageWidth={post.imageWidth}
          />
        </a>

        <div class="cursor-pointer absolute inset-0 transition-all rounded-lg duration-300 text-fuchsia-300 group-hover:scale-105 bg-fuchsia-950/40 flex flex-col justify-end items-start hover:text-fuchsia-50 hover:bg-fuchsia-950/0">
          <div class="group-hover:bg-fuchsia-950/50 w-full p-4 rounded-b-lg transition-all">
            <h2 class="text-xl font-semibold capitalize">{post.title}</h2>
          </div>
        </div>
      </div>
    </li>
  ))
}
